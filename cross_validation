clear all;close all;clc

%% This code takes as 
% - input the measurments from the IRF and TO2 analysis
% - Divide the data into leave-one out fashion
% - Computes the correlation coeff between IRF and TO2 on training data
% - Fit a polynomial to training data
% - Predict TO2 for gievn test data IRF 
% - Report the mean square error (MSE)


%% Input the data for all the cases 
% Note the Case NUmber and Subject number may not be the same since for
% some Cases we have 2 measurements and for others like Case 5 we donot
% include the measurment

% Case 1
Subject{1}.TO2 = [0.6534480048	0.5535223367	0.5477806548	0.6154835888	0.655165097	    0.6344421851	0.6505097116	0.61802727	    0.6712615951	0.6132332752	0.6709543219	0.706883386	    0.698381588	    0.7144377257];
Subject{1}.IRF = [0.0735053119	0.081672906	    0.0795608889	0.0878289422	0.0918857596	0.1025891182	0.1088650951	0.0875948488	0.1006902801	0.1293698514	0.1454491438	0.1951525586	0.2030593454	0.2043644508];

%Case #2 Colon
Subject{2}.TO2 = [0.7378885148	0.742481994 	0.7234921261	0.7520830962	0.7188665007	0.6990644205	0.6619160382	0.6010642852	0.496007136	    0.4024936732	0.4716258119	0.375996684];
Subject{2}.IRF = [0.2800508758	0.3217819399	0.3353304671	0.3421880122	0.3153775482	0.2071791693	0.1014280914	0.0337783736	0.0229663671	0.0176024122	0.0146847471	0.0119886237];

% Case 2 small bowel
Subject{3}.TO2 = [0.7890849281	0.7171018384	0.7711748311	0.7510322747	0.7208707972	0.6784889477	0.6368872182	0.5571269328	0.50845673   	0.5469829157	0.4656349359	0.4171423217	0.3978470208];
Subject{3}.IRF = [0.3251021696	0.322334765	    0.3026950124	0.2881612288	0.2357141555	0.1739586181	0.1020167059	0.0518264276	0.0249633154	0.017440879	    0.0158217628	0.0171278518	0.0174195291];

%Case #3
Subject{4}.TO2 = [0.7500647033	0.7266283778	0.7523789712	0.7609557555	0.7038037983	0.6802623476	0.6518512504	0.6035720528	0.4921058611	0.4423445232	0.4591921841	0.5186366731	0.5903897682	0.6410992161	0.5992334395	0.5558989483];
Subject{4}.IRF = [0.2010823066	0.1916562348	0.1950181099	0.2150028141	0.2198712743	0.2230763145	0.2099492599	0.1671047025	0.1597299286	0.187615401	    0.2014073253	0.2020632528	0.1936256208	0.2091458657	0.1673785721	0.160449206];

% Case #4
%Subject{}.TO2 = [0.8697996941	0.8655087807	0.7952926459	0.83392383	    0.8254050247	0.8820448076	0.802331378	    0.8331455921	0.9099404025	0.8384991181	0.9038458387	0.8669833849	0.8904097878	0.8664394799	0.8880262891	0.9102605786	0.9317668298	0.854863432  	0.9167530969	0.9105081697	0.9420986957];
%Subject{}.IRF = [0.0894154586	0.0754036859	0.0594454805	0.0354638372	0.0312081033	0.0280684028	0.0295237136	0.0303026114	0.0279456197	0.0256973121	0.0276960797	0.0248819022	0.0248593791	0.0272365485	0.0267100936	0.0221417843	0.0248663883	0.0252576212	0.0290954429	0.0251617334	0.0180240489];

% Case 6
Subject{5}.TO2 = [0.7547475655	0.792982432	    0.770646248	    0.6993798808	0.848604929	    0.7858915984	0.7814829586];
Subject{5}.IRF = [0.1747140847	0.2091950346	0.2491337825	0.2783334398	0.3336069298	0.3767188554	0.3852793645];

% Case 7
Subject{6}.TO2 = [0.5679072075	0.7078951569	0.6025609814	0.6102122088	0.5756400901	0.6371566527	0.7163140728	0.711687537	    0.7276379151	0.76239663   	0.7992834979	0.7582161375	0.7634704449	0.8099059894	0.7310259301	0.3651674279	0.6860700453	0.7555209984	0.7589830895	0.7675261886	0.7750404356	0.7497825056	0.682495587	    0.6776484724];
Subject{6}.IRF = [0.0926578834	0.0988317667	0.1008748035	0.0976160051	0.0939546139	0.1035885508	0.118212898	    0.1637170691	0.1976179231	0.2168429042	0.2169039443	0.2119040723	0.2209949788	0.1873674928	0.2024584009	0.1993017701	0.1977250135	0.1920503936	0.1995600841	0.1873668778	0.1780208658	0.1882361139	0.1818384053	0.1842933118];

% Case 8
Subject{7}.TO2 = [0.7405048372	0.7247081556	0.7342881298	0.7173139595	0.7382856486	0.7837006813	0.7296366029	0.7848744505	0.7684123877	0.7807942421	0.7932085381	0.7836374556	0.79115701];
Subject{7}.IRF = [0.1472322664	0.1762321483	0.1873594828	0.1994934182	0.2004592652	0.2120919831	0.2381097794	0.2484280772	0.2624284034	0.2807696964	0.2625560511	0.235648902	0.2234203092];


%% INPUTS 
leave_no = 6; % Subject number that you want to use for validation. Note subject no. and case no. are different.
Poly_degree = 2; % The degree of polynomial that you want to fit. If 1, a line will be fit. 

%%
TO2_all = [];
IRF_all = [];
% Split data into training and validation
for i = 1: length(Subject)
    if i == leave_no
        TO2_measured_testset = Subject{i}.TO2;
        IRF_measured_testset = Subject{i}.IRF;
    else
    TO2_all = [TO2_all Subject{i}.TO2];
    IRF_all = [IRF_all Subject{i}.IRF];
    end
end
Xcorr = corrcoef(IRF_all,TO2_all);   % Correlation Coefficient
Xcorr = Xcorr(1,2)

%% Polyfit
poly_fit = polyfit(IRF_all,TO2_all,Poly_degree);  
TO2_predict_testset = polyval(poly_fit,IRF_measured_testset);   % Predicted TO2 given IRF from leave_no samples

% For ploting the fitted polynomial
x_steps = min(IRF_all):0.05:max(IRF_all);
y_pred_steps = polyval(poly_fit,x_steps);

figure;
plot(x_steps, y_pred_steps, 'b', 'LineWidth',2); hold on;  % fitted polynomial
plot(IRF_all, TO2_all, 'o', 'MarkerSize',5, 'LineWidth',2)  % train samples 
hold on;
plot(IRF_measured_testset, TO2_measured_testset, 'ro', 'MarkerSize',5, 'LineWidth',2) % test samples measured values
plot(IRF_measured_testset, TO2_predict_testset, 'go', 'MarkerSize',5, 'LineWidth',2)  % test samples predicted values
legend ({'Polyfit','Train\_measurments','test\_TO2\_measured','Test\_TO2\_predicted'}, 'Location','southeast')

MSE = mean((TO2_measured_testset - TO2_predict_testset).^2) % mean square error

